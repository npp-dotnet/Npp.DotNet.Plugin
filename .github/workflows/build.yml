# SPDX-FileCopyrightText: Public Domain
# SPDX-License-Identifier: CC0-1.0

name: Native AOT Build
on:
  push:
    branches-ignore:
      - 'dependabot/**'
  pull_request:
    branches-ignore:
      - 'dependabot/**'

permissions:  # added using https://github.com/step-security/secure-repo
  contents: read

jobs:
  REUSE_compliance_check:
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@11bd71901bbe5b1630ceea73d27597364c9af683 # v4.2.2
    - name: REUSE Compliance Check
      uses: fsfe/reuse-action@bb774aa972c2a89ff34781233d275075cbddf542 # v5.0.0

  publish_aot:
    strategy:
      matrix:
        target_runtime: [ x64, arm64 ]
        build_config: [ Release, Debug ]
        plugin_demo: [ minimal, gui, fsharp, vbnet ]
    runs-on: windows-latest
    env:
      DOTNET_NOLOGO: true
      DOTNET_CLI_TELEMETRY_OPTOUT: true
      PLUGIN_NS: 'Npp.DotNet.Plugin'
      PLUGIN_NAME: 'Npp.DotNet.Plugin.Demo'

    steps:
      - uses: actions/checkout@11bd71901bbe5b1630ceea73d27597364c9af683 # v4.2.2
      - uses: actions/setup-dotnet@67a3573c9a986a3f9c594539f4ab511d57bb3ce9 # v4.3.1
        with:
          dotnet-version: >
            8.0.x
            9.0.x

      - name: Add msbuild to PATH
        uses: microsoft/setup-msbuild@6fb02220983dee41ce7ae257b6f4d8f9bf5ed4ce # v2.0.0

      - name: Restore projects
        run: |
          dotnet restore
          dotnet restore test

      - name: Test memory layout
        if: matrix.build_config == 'Debug' && matrix.plugin_demo == 'minimal'
        working-directory: ./test
        run: |
          dotnet msbuild /t:Build /p:TargetFramework=net9.0-windows /p:SharedRuntimeIdentifier=win-${{ matrix.target_runtime }}
          dotnet test -f net9.0-windows --no-build .\Memory

      - name: Test unmanaged string buffer allocation
        if: matrix.target_runtime == 'x64' && matrix.plugin_demo == 'minimal'
        working-directory: ./test
        run: |
          dotnet test -f net9.0-windows -c ${{ matrix.build_config }} .\Buffers

      - name: Build demo plugins
        run: |
          dotnet build examples\${{ matrix.plugin_demo }} -f net9.0-windows -r win-${{ matrix.target_runtime }} -c ${{ matrix.build_config }}
          dotnet publish examples\${{ matrix.plugin_demo }} -f net9.0-windows -r win-${{ matrix.target_runtime }} -c ${{ matrix.build_config }}

      - name: Pack localized plugin assets
        if: matrix.build_config == 'Release' && matrix.plugin_demo == 'minimal'
        working-directory: examples/minimal/bin/Release/net9.0-windows/win-${{ matrix.target_runtime }}/native
        run: |
          7z a -tzip ${{ env.PLUGIN_NAME }}.${{ matrix.target_runtime }}.zip ${{ env.PLUGIN_NAME }}.dll ${{ github.workspace }}\examples\minimal\localizations -y

      - name: Upload ${{ env.PLUGIN_NAME }}.${{ matrix.target_runtime }}
        if: matrix.build_config == 'Release' && matrix.plugin_demo == 'minimal'
        uses: actions/upload-artifact@ea165f8d65b6e75b540449e92b4886f43607fa02 # v4.6.2
        with:
          name: ${{ env.PLUGIN_NAME }}.${{ matrix.target_runtime }}
          path: examples/minimal/bin/Release/net9.0-windows/win-${{ matrix.target_runtime }}/native/${{ env.PLUGIN_NAME }}.${{ matrix.target_runtime }}.zip

      - name: Upload ${{ env.PLUGIN_NS }}.Gui.Demo.${{ matrix.target_runtime }}
        if: matrix.build_config == 'Release' && matrix.plugin_demo == 'gui'
        uses: actions/upload-artifact@ea165f8d65b6e75b540449e92b4886f43607fa02 # v4.6.2
        with:
          name: ${{ env.PLUGIN_NS }}.Gui.Demo.${{ matrix.target_runtime }}
          path: examples/gui/bin/Release/net9.0-windows/win-${{ matrix.target_runtime }}/native/${{ env.PLUGIN_NS }}.Gui.Demo.dll

      - name: Upload ${{ env.PLUGIN_NS }}.VBNet.Demo.${{ matrix.target_runtime }}
        if: matrix.build_config == 'Release' && matrix.plugin_demo == 'vbnet'
        uses: actions/upload-artifact@ea165f8d65b6e75b540449e92b4886f43607fa02 # v4.6.2
        with:
          name: ${{ env.PLUGIN_NS }}.VBNet.Demo.${{ matrix.target_runtime }}
          path: examples/vbnet/bin/Release/net9.0-windows/win-${{ matrix.target_runtime }}/native/${{ env.PLUGIN_NS }}.VBNet.Demo.dll

      - name: Upload ${{ env.PLUGIN_NS }}.FSharp.Demo.${{ matrix.target_runtime }}
        if: matrix.build_config == 'Release' && matrix.plugin_demo == 'fsharp'
        uses: actions/upload-artifact@ea165f8d65b6e75b540449e92b4886f43607fa02 # v4.6.2
        with:
          name: ${{ env.PLUGIN_NS }}.FSharp.Demo.${{ matrix.target_runtime }}
          path: examples/fsharp/bin/Release/net9.0-windows/win-${{ matrix.target_runtime }}/native/${{ env.PLUGIN_NS }}.FSharp.Demo.dll
